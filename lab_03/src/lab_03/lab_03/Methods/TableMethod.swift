//
//  TableMethod.swift
//  lab_03
//
//  Created by Polina Egorova on 04.11.2023.
//

import Foundation

class TableMethod {
    let helpers = Helpers()
    
    var nums_10_1   = [Int]()
    var nums_100_1  = [Int]()
    var nums_1000_1 = [Int]()
    
    let table1 = "2,0,1,8,3,0,7,8,1,3,4,6,1,3,1,3,4,1,6,4,4,3,2,4,6,9,6,5,3,2,2,6,3,3,4,7,3,2,5,5,5,9,2,7,2,4,0,7,5,7,2,0,0,5,5,6,4,2,2,8,5,4,5,8,8,0,5,2,2,1,7,8,0,0,5,3,4,6,1,0,4,3,1,4,9,7,1,3,9,4,2,4,9,7,3,7,8,9,9,0,0,7,9,1,8,5,5,2,1,6,3,5,0,4,0,9,1,2,3,0,6,6,5,5,4,8,3,2,8,3,3,8,1,2,9,9,7,4,1,9,1,4,5,1,9,5,1,0,7,4,1,4,1,6,0,5,5,3,7,3,6,0,2,7,3,1,6,0,6,8,9,7,3,4,9,2,0,1,3,8,6,4,3,7,1,3,2,7,6,0,1,3,1,3,0,4,5,7,4,2,6,4,9,9,9,9,2,9,0,6,8,7,0,1,4,2,4,7,9,1,7,1,4,8,4,5,2,0,3,7,2,9,1,1,9,0,1,2,0,2,8,9,9,8,0,3,1,4,1,1,6,8,2,0,7,6,5,9,6,8,7,8,8,9,0,7,0,2,9,0,5,7,9,4,6,0,8,7,5,9,8,1,8,0,1,5,7,7,5,4,6,2,3,4,1,4,2,1,7,1,2,2,9,1,6,6,2,5,3,7,4,2,8,2,3,0,8,1,7,3,6,3,5,9,8,6,4,0,8,1,2,0,3,2,2,9,8,4,5,2,1,9,5,9,2,8,0,0,0,7,3,6,1,9,5,0,6,0,1,4,1,3,4,4,6,7,4,5,1,9,7,3,9,2,3,1,1,3,2,1,1,6,7,2,5,3,2,1,3,3,5,4,7,0,9,4,8,3,9,9,3,6,3,2,9,6,4,0,9,6,2,0,2,0,3,8,3,6,9,7,0,5,2,8,6,1,2,4,5,1,4,8,8,7,1,8,4,5,9,4,2,1,5,5,2,8,3,6,5,3,3,5,9,6,3,5,8,6,0,4,8,5,2,7,3,4,5,7,9,5,1,1,7,6,6,9,5,0,5,1,4,9,6,3,5,0,9,4,7,9,8,5,5,1,3,8,5,9,5,4,4,7,6,1,4,3,0,0,3,6,1,7,5,8,1,1,9,0,5,6,0,3,2,5,4,5,4,9,4,9,4,9,7,0,0,1,4,1,2,8,7,3,6,3,1,7,4,0,7,9,6,8,2,9,4,7,5,8,6,9,8,1,9,5,2,9,7,6,1,9,4,9,3,0,2,4,7,6,5,5,6,2,4,9,1,8,6,6,7,3,6,5,4,5,1,6,5,9,3,6,9,7,5,2,8,8,7,6,4,2,1,0,4,6,9,5,5,6,2,2,9,8,8,4,4,0,1,9,9,4,6,9,2,2,1,1,0,8,7,4,0,9,5,5,5,5,0,0,1,3,3,1,1,1,6,6,1,7,5,1,2,2,1,5,4,2,6,4,1,3,8,1,2,4,6,8,9,7,9,1,1,2,2,3,3,8,9,5,6,5,7,9,7,8,4,1,1,0,5,2,4,4,4,7,8,1,5,8,9,4,9,0,6,2,3,0,1,2,6,8,7,4,7,4,3,2,6,4,3,1,7,7,6,1,4,5,2,0,3,2,5,3,2,2,6,5,3,8,7,9,6,5,4,4,0,7,6,6,2,9,8,0,7,5,1,2,0,4,3,4,6,8,2,9,6,3,4,0,3,3,2,2,7,7,1,0,6,4,7,9,4,4,2,9,3,6,4,6,9,2,8,9,2,0,9,8,4,4,9,7,7,1,0,5,9,1,6,5,6,3,4,0,7,6,0,0,2,4,7,2,6,5,2,9,6,1,7,1,5,6,8,3,8,9,9,7,0,5,3,6,8,8,7,6,5,7,7,8,1,5,0,8,0,3,7,7,4,5,8,0,2,7,3,0,6,3,8,7,8,2,4,7,0,1,3,5,8,1,3,0,6,4,8,7,7,6,4,2,1,3,2,4,1,6,5,8,9,3,5,8,6,0,5,6,1,9,2,0,0,6,1,6,0,9,4,8,6,9,0,8,3,3,2,4,0,7,3,0,1,9,8,7,9,3,3,1,2,6,1,3,2,2,0,3,2,4,1,8,3,2,7,6,6,9,1,6,7,4,6,8,4,5,5,3,8,9,4,1,5,6,4,8,8,5,1,1,9,3,0,3,6,7,0,2,7,1,9,4,6,6"
    
    let table10 = "55,51,69,22,73,39,89,66,58,30,95,23,39,30,87,32,17,89,49,11,69,90,36,85,48,23,41,64,61,76,37,98,30,50,65,32,25,23,71,11,16,51,66,36,12,64,65,32,89,93,99,88,98,45,51,64,24,84,73,59,97,35,14,82,92,96,92,89,64,64,17,93,27,47,95,27,34,99,82,83,58,18,75,67,77,49,10,85,98,10,18,41,50,22,13,80,46,84,44,15,71,76,68,35,86,15,70,60,49,33,39,25,11,89,10,89,60,47,14,52,96,17,90,64,56,75,53,15,44,24,81,50,64,76,22,82,50,50,80,71,79,50,45,74,70,92,40,60,21,24,30,99,79,91,19,64,85,14,78,21,62,65,26,34,52,89,60,34,77,28,49,19,66,42,73,55,72,25,93,63,44,93,93,29,93,81,71,73,67,58,97,46,71,69,19,23,34,20,31,81,42,15,82,93,74,21,42,46,28,63,91,69,20,25,76,68,72,96,41,71,28,87,67,29,31,13,48,97,33,59,31,61,93,21,31,39,20,99,55,82,48,34,55,13,66,37,35,56,92,50,51,37,79,60,63,55,48,62,72,71,72,45,23,68,42,40,75,99,93,47,57,72,50,58,32,94,41,64,63,93,78,92,14,82,17,93,82,43,58,76,90,58,36,84,20,13,20,86,70,35,61,35,62,55,92,79,86,30,38,69,23,84,99,78,93,80,40,41,60,48,58,42,50,27,56,99,45,66,48,29,83,54,93,37,42,52,40,59,89,38,16,61,14,89,62,16,59,57,91,40,72,78,36,32,77,28,84,44,98,92,43,29,82,19,85,68,90,71,46,50,49,81,51,31,41,96,37,61,64,50,50,87,75,18,56,14,28,70,60,23,67,95,60,96,95,87,79,95,13,94,25,87,21,50,90,91,37,14,90,80,90,33,80,57,52,55,54,73,63,80,50,30,21,33,83,54,30,54,36,54,27,42,58,70,35,63,76,35,28,64,77,24,79,79,32,44,25,12,54,49,42,15,42,32,53,95,75,87,66,45,71,82,77,46,63,58,74,19,32,88,79,28,55,98,13,36,50,42,10,49,39,27,10,87,21,21,99,35,26,40,87,88,68,82,93,95,46,43,25,73,69,15,80,65,69,24,60,44,29,27,54,43,87,27,16,53,81,89,34,52,59,48,93,92,11,91,59,72,15,18,89,17,27,36,79,33,47,44,28,97,60,65,16,98,85,54,11,50,76,49,23,56,18,72,24,31,22,87,64,78,64,88,38,21,38,47,25,60,48,82,16,47,71,37,91,94,41,94,17,57,90,18,95,66,94,43,98,54,22,58,21,60,80,49,42,72,36,95,70,47,38,50,12,94,42,75,84,80,81,30,89,28,79,17,88,56,92,72,26,94,49,71,48,90,70,56,67,31,95,29,67,46,33,70,28,49,16,10,33,28,58,28,73,92,68,93,80,73,61,86,79,63,78,75,98,66,12,21,34,86,18,62,84,62,62,53,94,19,88,48,49,92,49,97,46,30,98,56,31,77,75,93,70,19,49,13,67,57,71,62,47,94,76,46,20,95,43,20,39,25,98,70,84,23,46,87,24,81,39,77,68,56,90,57,20,24,92,75,22,58,85,46,47,36,10,55,25,12,87,51,87,87,26,16,78,15,18,56,72,62,89,86,28,94,93,91,14,29,36,95,12,68,97,81,39,62,32,58,22,91,71,22,93,88,89,80,39,83,79,15,16,46,12,60,69,99,27,53,42,19,51,96,76,92,48,29,89,45,76,25,82,59,44,81,90,77,92,40,14,23,61,30,50,30,89,66,65,47,21,40,44,79,26,12,49,75,45,11,49,70,91,94,17,63,33,56,12,30,70,91,16,87,49,29,58,30,55,55,13,81,63,52,33,45,81,13,43,41,41,24,41,91,91,43,32,67,23,87,97,42,64,44,76,29,33,57,39,97,54,29,30,90,97,67,16,48,70,71,82,30,22,70,88,56,60,25,96,15,97,90,17,68,58,70,27,28,75,13,22,33,73,45,86,22,94,50,93,33,37,83,96,51,14,77,30,93,56,30,69,17,61,34,10,64,21,61,42,37,50,87,72,66,58,58,57,76,84,76,62,19,31,72,78,23,93,65,63,80,50,33,72,55,44,14,72,48,45,32,10,42,18,66,82,49,20,40,92,56,30,53,18,79,68,59,86,88,56,86,70,55,97,61,86,26,25,26,32,54,85,18,41,62,75,29,10,65,90,38,12,63"
    
    let table100 = "476,248,866,958,641,703,845,831,521,392,467,443,124,760,357,547,602,638,402,217,569,858,674,348,579,970,294,244,683,623,521,223,226,216,120,966,483,391,622,673,874,521,643,139,797,550,504,460,412,389,582,763,791,941,903,618,573,617,478,670,509,701,248,898,870,343,317,908,739,390,163,311,116,728,342,148,315,635,550,129,566,834,831,393,140,758,432,285,313,502,492,865,912,951,264,273,372,744,268,553,333,595,720,122,326,371,746,162,698,855,403,938,166,449,204,674,869,855,857,212,911,131,695,336,897,298,398,165,564,168,775,570,467,997,796,970,213,809,167,769,111,369,586,457,199,554,799,563,847,589,404,517,887,156,642,301,900,483,224,127,973,681,598,629,179,832,571,169,652,233,561,160,787,188,200,641,545,337,237,443,499,834,318,974,764,358,682,410,454,595,169,730,684,139,795,430,771,957,378,366,983,729,910,713,128,343,729,799,955,101,756,663,345,781,628,238,463,623,864,821,249,260,715,157,163,830,476,748,392,770,869,587,958,871,460,769,923,604,946,521,628,883,455,452,839,506,484,903,510,657,967,247,192,556,216,822,113,852,650,297,866,981,507,285,232,268,704,474,421,859,314,859,677,443,293,366,804,363,318,657,446,573,337,734,803,722,495,502,754,637,756,170,953,748,654,646,476,270,320,670,801,109,581,651,442,208,569,749,363,850,117,750,634,993,850,393,744,772,481,509,773,302,720,783,203,243,905,929,788,647,890,634,142,648,855,437,991,686,392,695,252,746,239,903,619,105,536,960,897,361,901,703,788,810,897,598,388,797,548,298,302,640,960,715,960,483,707,986,237,513,401,157,479,786,357,127,163,816,264,197,707,944,131,527,745,286,846,332,750,356,148,293,238,194,492,612,785,523,943,236,397,550,822,484,959,844,323,101,553,870,535,572,633,450,591,357,608,533,970,773,636,475,335,881,464,207,919,385,394,744,341,639,872,127,800,256,222,647,568,901,962,844,779,880,820,575,660,787,603,234,104,352,552,269,599,922,315,941,119,851,924,938,706,808,628,895,699,605,650,434,235,961,964,169,811,791,696,455,160,888,547,231,782,260,740,989,186,702,528,878,941,280,627,717,976,123,237,970,351,925,876,155,237,268,998,143,387,483,458,807,325,859,881,230,403,792,256,546,167,639,808,996,177,772,493,955,433,347,192,787,654,725,204,234,112,492,993,613,261,697,701,703,343,720,652,181,399,497,413,284,867,690,902,711,216,879,978,465,774,143,709,140,391,671,253,599,755,746,217,911,798,643,385,470,938,205,752,456,219,411,656,936,933,908,920,963,822,492,118,233,513,628,838,218,987,390,637,288,709,133,506,147,656,517,470,668,654,736,654,680,412,712,339,188,837,714,571,181,865,786,677,265,856,172,300,588,141,155,666,636,400,124,372,190,649,250,788,370,383,666,823,491,723,669,652,748,520,926,109,989,819,555,423,923,456,341,290,583,317,881,626,599,169,118,380,388,440,249,539,686,926,300,798,298,962,286,541,287,520,551,167,214,145,677,817,844,700,448,733,407,960,305,153,501,139,324,421,705,388,363,408,371,487,423,163,618,756,224,961,270,800,102,162,765,814,512,553,492,300,535,687,992,515,231,726,721,247,396,258,738,864,835,898,256,243,795,726,722,613,299,187,575,487,563,607,957,242,388,686,627,770,928,505,852,675,416,855,355,697,442,470,460,966,323,405,965,203,905,621,118,786,831,878,100,447,211,604,952,624,768,578,859,710,631,967,935,429,146,581,827,940,470,125,271,828,727,609,263,257,642,853,337,766,667,841,939,149,504,504,564,811,903,731,928,863,611,750,434,355,469,635,157,424,793,178,415,806,707,272,720,602,440,794,982,914,340,192,142,790,128,885,924,641,116,116,136,739,196,407,316,977,274,908,788,106,796,912,973,589,525,232,442,332,784,961,470,209,748,114,623,519,707,644,327,583,710,516,407,777,142,675,710,399,955,742,427,532,105,975,218,427,219,553,364,895,543,692,856,155,646,926,990,181,784,797,369,630,680,304,396,380,605,295,546,850,522,143,377,142,634,937,203,773,896,295,400,254,380,431,140,118,659,352,230,215,685,628,614,257,472,797,852,801,679,837,822,923,106,513,473,499,414,814,520,708,823,317,285,589,497,215,349,349,263,377,720,234,861,868,589,156,224,260,882,763,650,472,388,874,838,950,254,693,179,718,724,557,107,582,618,625,695,463,245,135,159,359,835,237,400"

    func generateTableMethod(filename: String, start: Int, end: Int) {
        var arr = Array(repeating: 0, count: 1000)
        let num = Int.random(in: 0...1000)
        var j = num

        var string = table1
        if start == 10 {
            string = table10
        }
        if start == 100 {
            string = table100
        }
        var nums = [Int]()
        let array = string.components(separatedBy: ",")
        for el in array { nums.append(Int(el)!) }

        for i in 0..<arr.count {
            arr[i] = nums[j]
            j = (j + 1) % nums.count
        }
        
        get_10_nums(nums: arr)
        
        let elems = arr.map( {"\($0)"} )
        
        helpers.write_to_file(text: elems.joined(separator: "\n"), filename: filename)
    }
}

extension TableMethod {
    private func get_10_nums(nums: [Int]) {
        if nums[0] < 10 {
            nums_10_1 = Array(nums[0..<10])
        }
        
        if nums[0] >= 10 && nums[0] < 100 {
            nums_100_1 = Array(nums[0..<10])
        }
        
        if nums[0] >= 100 && nums[0] < 1000 {
            nums_1000_1 = Array(nums[0..<10])
        }
    }
}

